package com.hvass.illbethere;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Date;

import android.content.Context;
import android.widget.Toast;

public static class DatabaseConnector {

	private DatabaseConnector INSTANCE;
	private String url = "jdbc:mysql://mysql.itu.dk";
	private String user = "user=temp";
	private String password = "&password=temp";
	private Connection connect = null;
	private Statement statement = null;
	private PreparedStatement preparedStatement = null;
	private ResultSet resultSet = null;
	
	public DatabaseConnector getInstance ()
	{
		if (INSTANCE != null) return INSTANCE;
		else return new DatabaseConnector();
	}
	
	private void testConnectToDb() throws Exception
	{
		
		try
		{
			Class.forName("com.mysql.jdbc.Driver");
			
			connect = DriverManager.getConnection(url);
		} catch (Exception e) {
			throw e;
		} finally {
			close();
		}
	}
	
	public void toastMe(String s)
	{
		//Context context = MainActivity.getApplicationContext();
		CharSequence text = s;
		int duration = Toast.LENGTH_SHORT;
		
		//Toast toast = Toast.makeText(context, text, duration);
		//toast.show();
	}

	public void readDataBase(){
		try {
			// This will load the MySQL driver, each DB has its own driver
			Class.forName("com.mysql.jdbc.Driver");
			// Setup the connection with the DB
			connect = DriverManager
					.getConnection("jdbc:mysql://mysql.itu.dk user=temp&password=temp");
					//.getConnection("jdbc:mysql://localhost/feedback?"
						//	+ "user=sqluser&password=sqluserpw");

			// Statements allow to issue SQL queries to the database
			statement = connect.createStatement();
			// Result set get the result of the SQL query
			resultSet = statement
					.executeQuery("select * from Secret.bartable");
			writeResultSet(resultSet);
			System.out.println(resultSet);
		} catch (Exception e) {
			System.out.println("sql error");;
		} finally {
			close();
		}

	}

	private void writeMetaData(ResultSet resultSet) throws SQLException {
		// Now get some metadata from the database
		// Result set get the result of the SQL query

		System.out.println("The columns in the table are: ");

		System.out.println("Table: " + resultSet.getMetaData().getTableName(1));
		for (int i = 1; i <= resultSet.getMetaData().getColumnCount(); i++) {
			System.out.println("Column " + i + " "
					+ resultSet.getMetaData().getColumnName(i));
		}
	}

	private void writeResultSet(ResultSet resultSet) throws SQLException {
		// ResultSet is initially before the first data set
		while (resultSet.next()) {
			// It is possible to get the columns via name
			// also possible to get the columns via the column number
			// which starts at 1
			// e.g. resultSet.getSTring(2);
			String user = resultSet.getString("myuser");
			String website = resultSet.getString("webpage");
			String summery = resultSet.getString("summery");
			Date date = resultSet.getDate("datum");
			String comment = resultSet.getString("comments");
			System.out.println("User: " + user);
			System.out.println("Website: " + website);
			System.out.println("Summery: " + summery);
			System.out.println("Date: " + date);
			System.out.println("Comment: " + comment);
		}
	}

	// You need to close the resultSet
	private void close() {
		try {
			if (resultSet != null) {
				resultSet.close();
			}

			if (statement != null) {
				statement.close();
			}

			if (connect != null) {
				connect.close();
			}
		} catch (Exception e) {

		}
	}

}
